@page "/ListadoTruequesAcordados"
<MudDialogProvider />
@using YateMate.Aplicacion.UseCases.Bien
@using YateMate.Aplicacion.UseCases.Oferta
@using YateMate.Aplicacion.UseCases.TruequesConfirmados
@using YateMate.Components.Shared
@rendermode InteractiveServer
@inject ObtenerTruequesAcordadosUseCase ObtenerTruequesAcordadosUseCase
@inject ObtenerBienUseCase ObtenerBienUseCase
@inject ObtenerPublicacionDeUseCase ObtenerPublicacion
@inject IDialogService Dialog
@inject ObtenerTruequesConfirmadosUseCase ObtenerTruequesConfirmados
@inject NavigationManager NavigationManager 

<h1>Listado trueques acordados</h1>
<title>Ofertas</title>

@if (!_tieneElementos)
{
    <h2>No hay trueques acordados</h2>
}
else
{
    <MudPaper Width="100%" Class="darkbackground" MinHeight="350" Style="border: none; box-shadow: none;"> 
        <MudContainer>
            <MudGrid>
                @foreach (var oferta in _lista)
                {
                    var bien = ObtenerBienUseCase.Ejecutar(oferta.BienId);
                    var publicacion = ObtenerPublicacion.Ejecutar(oferta.PublicacionId);
                    <MudItem xs="4" Style="display:flex;">
                        <MudPaper Width="100%" Square="false" Class="pa-10 ma-2 infobox" Style="border: none; box-shadow: none;">
                            <MudCard>
                                <MudCardMedia Image=@bien.Imagen Height="200" Style="object-fit: contain;" />
                                <MudCardContent Style="min-height: 100px">
                                    <MudText Typo="Typo.h5" Style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">@bien.Nombre</MudText>
                                    <MudText Typo="Typo.body2" Style="overflow: hidden; text-overflow: ellipsis; display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical;">@bien.Descripcion</MudText>
                                </MudCardContent>
                                <MudCardActions Style="justify-content: space-between;">
                                    <MudButton Variant="Variant.Text" @onclick="()=>OpenDialog(oferta, bien, publicacion)" Color="Color.Primary">Ver m√°s</MudButton>
                                </MudCardActions>
                            </MudCard>
                        </MudPaper>
                    </MudItem>
                }
            </MudGrid>
        </MudContainer>
    </MudPaper>

}
@code {
    List<Oferta> _lista = new List<Oferta>();
    bool _tieneElementos;
    protected override void OnInitialized()
    {
        _lista = ObtenerTruequesAcordadosUseCase.Ejecutar();
        var listaTruequesConfirmados = ObtenerTruequesConfirmados.Ejecutar();
        _lista = _lista.
            Where(trueque => !listaTruequesConfirmados
                .Exists(tc => tc.PublicacionId == trueque.PublicacionId))
            .ToList();
    }
    protected override void OnParametersSet()
    {
        if (_lista.Count > 0)
        {
            _tieneElementos = true;
        }
    }
    private void OpenDialog(Oferta oferta, Bien bien, Publicacion pub)
    {
        var parameters = new DialogParameters<VerDatosTrueque>();
        parameters.Add(x => x.Oferta, oferta);
        parameters.Add(x => x.Publicacion, pub);
        parameters.Add(x => x.Bien, bien);
        Dialog.Show<VerDatosTrueque>("Viendo datos del trueque", parameters);
        
    }
}